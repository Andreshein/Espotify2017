/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import Logica.DtAlbum;
import Logica.DtCliente;
import Logica.DtLista;
import Logica.DtListaP;
import Logica.DtListaPD;
import Logica.DtTema;
import Logica.DtUsuario;
import Logica.Fabrica;
import Logica.IcontCliente;
import java.awt.CardLayout;
import java.awt.Dimension;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Kevin
 */
public class ConsultarPerfilCliente extends javax.swing.JInternalFrame {

    IcontCliente contClientes;
    
    ArrayList<DtTema> temasFavCli = null;
    ArrayList<DtAlbum> albumesFavCli = null;
    ArrayList<DtLista> listasFavCli = null;
    ArrayList<DtUsuario> usuariosSeguidos = null;
    ArrayList<DtCliente> seguidores = null;
    /**
     * Creates new form ConsultarPerfilCliente
     */
    public ConsultarPerfilCliente() {
        initComponents();
        
        contClientes = Fabrica.getCliente();
        listarClientes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        clientesTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        favoritosComboBox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        usuariosComboBox = new javax.swing.JComboBox<>();
        favoritosPanel = new javax.swing.JPanel();
        albumesPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        albumesTable = new javax.swing.JTable();
        listasFavPanel = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        listasFavTable = new javax.swing.JTable();
        temasPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        temasTable = new javax.swing.JTable();
        usuariosPanel = new javax.swing.JPanel();
        usuariosSeguidosPanel = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        usuariosSeguidosTable = new javax.swing.JTable();
        seguidoresPanel = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        seguidoresTable = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Clientes:");

        clientesTable.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        clientesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nickname"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        clientesTable.setGridColor(new java.awt.Color(204, 204, 204));
        clientesTable.setShowVerticalLines(false);
        clientesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clientesTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(clientesTable);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Información Básica:");

        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Apellido", "Fecha de nacimiento", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(204, 204, 204));
        jScrollPane1.setViewportView(jTable1);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Favoritos:");

        favoritosComboBox.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        favoritosComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Temas", "Álbumes", "Listas" }));
        favoritosComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                favoritosComboBoxActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Usuarios:");

        usuariosComboBox.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        usuariosComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Siguiendo", "Seguidores" }));
        usuariosComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuariosComboBoxActionPerformed(evt);
            }
        });

        favoritosPanel.setLayout(new java.awt.CardLayout());

        albumesTable.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        albumesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Artista", "Nombre", "Año"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(albumesTable);

        javax.swing.GroupLayout albumesPanelLayout = new javax.swing.GroupLayout(albumesPanel);
        albumesPanel.setLayout(albumesPanelLayout);
        albumesPanelLayout.setHorizontalGroup(
            albumesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 579, Short.MAX_VALUE)
            .addGroup(albumesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, albumesPanelLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        albumesPanelLayout.setVerticalGroup(
            albumesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
            .addGroup(albumesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, albumesPanelLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        favoritosPanel.add(albumesPanel, "albumesPanel");

        listasFavTable.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        listasFavTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Tipo", "Creador/Género"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(listasFavTable);

        javax.swing.GroupLayout listasFavPanelLayout = new javax.swing.GroupLayout(listasFavPanel);
        listasFavPanel.setLayout(listasFavPanelLayout);
        listasFavPanelLayout.setHorizontalGroup(
            listasFavPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 579, Short.MAX_VALUE)
            .addGroup(listasFavPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listasFavPanelLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        listasFavPanelLayout.setVerticalGroup(
            listasFavPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
            .addGroup(listasFavPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listasFavPanelLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        favoritosPanel.add(listasFavPanel, "listasPanel");

        temasTable.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        temasTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Artista", "Album", "Nombre", "Orden", "Duración"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        temasTable.setGridColor(new java.awt.Color(204, 204, 204));
        jScrollPane3.setViewportView(temasTable);

        javax.swing.GroupLayout temasPanelLayout = new javax.swing.GroupLayout(temasPanel);
        temasPanel.setLayout(temasPanelLayout);
        temasPanelLayout.setHorizontalGroup(
            temasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 579, Short.MAX_VALUE)
            .addGroup(temasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, temasPanelLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        temasPanelLayout.setVerticalGroup(
            temasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
            .addGroup(temasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, temasPanelLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        favoritosPanel.add(temasPanel, "temasPanel");

        usuariosPanel.setLayout(new java.awt.CardLayout());

        usuariosSeguidosTable.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        usuariosSeguidosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nickname", "Nombre", "Apellido", "Tipo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        usuariosSeguidosTable.setGridColor(new java.awt.Color(204, 204, 204));
        jScrollPane7.setViewportView(usuariosSeguidosTable);

        javax.swing.GroupLayout usuariosSeguidosPanelLayout = new javax.swing.GroupLayout(usuariosSeguidosPanel);
        usuariosSeguidosPanel.setLayout(usuariosSeguidosPanelLayout);
        usuariosSeguidosPanelLayout.setHorizontalGroup(
            usuariosSeguidosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 579, Short.MAX_VALUE)
            .addGroup(usuariosSeguidosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, usuariosSeguidosPanelLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        usuariosSeguidosPanelLayout.setVerticalGroup(
            usuariosSeguidosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 181, Short.MAX_VALUE)
            .addGroup(usuariosSeguidosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, usuariosSeguidosPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)))
        );

        usuariosPanel.add(usuariosSeguidosPanel, "siguiendoPanel");

        seguidoresTable.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        seguidoresTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nickname", "Nombre", "Apellido"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(seguidoresTable);

        javax.swing.GroupLayout seguidoresPanelLayout = new javax.swing.GroupLayout(seguidoresPanel);
        seguidoresPanel.setLayout(seguidoresPanelLayout);
        seguidoresPanelLayout.setHorizontalGroup(
            seguidoresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 579, Short.MAX_VALUE)
            .addGroup(seguidoresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, seguidoresPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        seguidoresPanelLayout.setVerticalGroup(
            seguidoresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 181, Short.MAX_VALUE)
            .addGroup(seguidoresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, seguidoresPanelLayout.createSequentialGroup()
                    .addGap(0, 5, Short.MAX_VALUE)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        usuariosPanel.add(seguidoresPanel, "seguidoresPanel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 579, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(160, 160, 160))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(favoritosComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(usuariosComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(203, 203, 203)
                    .addComponent(favoritosPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(157, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(201, 201, 201)
                    .addComponent(usuariosPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(159, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(favoritosComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(155, 155, 155)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(usuariosComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 523, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(157, 157, 157)
                    .addComponent(favoritosPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(272, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(368, Short.MAX_VALUE)
                    .addComponent(usuariosPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(22, 22, 22)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clientesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clientesTableMouseClicked
        String nickname = (String) clientesTable.getValueAt(clientesTable.getSelectedRow(), 0);
        DtCliente cliente = contClientes.verPerfilCliente(nickname);

        // limpiar variables
        temasFavCli.clear();
        albumesFavCli.clear();
        listasFavCli.clear();
        seguidores.clear();
        usuariosSeguidos.clear();

        //guardar los datos el cliente para poder mostrarlos o ocultarlos en la interfaz
        temasFavCli = cliente.getFavTemas();
        albumesFavCli = cliente.getFavAlbumes();
        listasFavCli = cliente.getFavListas();
        seguidores = contClientes.getSeguidores(nickname);
        usuariosSeguidos = cliente.getUsuariosSeguidos();

        listarTemas();
    }//GEN-LAST:event_clientesTableMouseClicked

    private void favoritosComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_favoritosComboBoxActionPerformed
        // TODO add your handling code here:
        mostrarFavoritos( (String) favoritosComboBox.getSelectedItem() );
    }//GEN-LAST:event_favoritosComboBoxActionPerformed

    private void usuariosComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuariosComboBoxActionPerformed
        // TODO add your handling code here:
        mostrarUsuarios( (String) usuariosComboBox.getSelectedItem() );
    }//GEN-LAST:event_usuariosComboBoxActionPerformed

    // Funciones
    public void mostrarFavoritos(String tipo){
        CardLayout cl = (CardLayout)(favoritosPanel.getLayout());
        
        switch(tipo){
            case "Temas":
                cl.show(favoritosPanel, "temasPanel");
                break;
            case "Álbumes":
                cl.show(favoritosPanel, "albumesPanel");
                break;
            case "Listas":
                cl.show(favoritosPanel, "listasPanel");
                break;
        }
    }
    
    public void mostrarUsuarios(String tipo){
        CardLayout cl = (CardLayout)(usuariosPanel.getLayout());
        
        switch(tipo){
            case "Siguiendo":
                cl.show(usuariosPanel, "siguiendoPanel");
                break;
            case "Seguidores":
                cl.show(usuariosPanel, "seguidoresPanel");
                break;
        }
    }
    
    public void listarClientes(){
        DefaultTableModel modelo = (DefaultTableModel) clientesTable.getModel();
        while(modelo.getRowCount()>0)modelo.removeRow(0);//limpiar la tabla
         
        for (String nickname : contClientes.listarNickClientes()) {
            System.out.println(nickname);
           String[] datos = {nickname}; 
           modelo.addRow(datos);
        }
    }
    
    public void listarTemas(){
        DefaultTableModel modelo = (DefaultTableModel) temasTable.getModel();
        while(modelo.getRowCount()>0)modelo.removeRow(0);//limpiar la tabla
        if(temasFavCli != null){
            for (DtTema tema : temasFavCli) {
                //String[] datos ={"No implementado", "No implementado", tema.getNombre(), tema.getOrden(), tema.getDuracion()};
                //modelo.addRow(datos);
            }
        }
    }
    
    public void listarAlbumes(){
        DefaultTableModel modelo = (DefaultTableModel) albumesTable.getModel();
        while(modelo.getRowCount()>0)modelo.removeRow(0);//limpiar la tabla
        if(albumesFavCli != null){
            for (DtAlbum album : albumesFavCli) {
                String[] datos ={album.getNombreArtista(), album.getNombre(), String.valueOf(album.getAnio())};
                modelo.addRow(datos);
            }
        }
    }
    
    public void listarListasFavoritas(){
        DefaultTableModel modelo = (DefaultTableModel) listasFavTable.getModel();
        while(modelo.getRowCount()>0)modelo.removeRow(0);//limpiar la tabla
        if(listasFavCli != null){
            for (DtLista lista : listasFavCli) {
                String tipo;
                String creadorOgenero;
                if(lista instanceof DtListaPD){
                    tipo = "Por defecto";
                    creadorOgenero = ((DtListaPD) lista).getGenero();
                }else{
                    tipo = "Particular";
                    creadorOgenero = ((DtListaP) lista).getUsuario();
                }
                String[] datos ={lista.getNombre(), tipo, creadorOgenero};
                modelo.addRow(datos);
            }
        }
    }
    
    public void listarUsuariosSeguidos(){
        DefaultTableModel modelo = (DefaultTableModel) usuariosSeguidosTable.getModel();
        while(modelo.getRowCount()>0)modelo.removeRow(0);//limpiar la tabla
        if(usuariosSeguidos != null){
            for (DtUsuario usuario : usuariosSeguidos) {
                String tipo;
                if(usuario instanceof DtCliente){
                    tipo = "Cliente";
                }else{
                    tipo = "Artista";
                }
                String[] datos ={usuario.getNickname(), usuario.getNombre(), usuario.getApellido(), tipo};
                modelo.addRow(datos);
            }
        }
    }
    
    public void listarSeguidores(){
        DefaultTableModel modelo = (DefaultTableModel) seguidoresTable.getModel();
        while(modelo.getRowCount()>0)modelo.removeRow(0);//limpiar la tabla
        if(seguidores != null){
            for (DtCliente seguidor : seguidores) {
                String[] datos ={seguidor.getNickname(), seguidor.getNombre(), seguidor.getApellido()};
                modelo.addRow(datos);
            }
        }
    }
    
    public void centrar(){
        //este metodo devuelve el tamaÃ±o de la pantalla
        Dimension pantalla = this.getParent().getSize();
        //obtenemos el tamaÃ±o de la ventana
        Dimension ventana = this.getSize();
        //para centrar la ventana lo hacemos con el siguiente calculo
        int a = pantalla.width;
        int b = ventana.width;
        a = (a-b)/2;
        int c = pantalla.height;
        int d = ventana.height;
        c = (c-d)/2;
        this.setLocation(a, c);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel albumesPanel;
    private javax.swing.JTable albumesTable;
    private javax.swing.JTable clientesTable;
    private javax.swing.JComboBox<String> favoritosComboBox;
    private javax.swing.JPanel favoritosPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel listasFavPanel;
    private javax.swing.JTable listasFavTable;
    private javax.swing.JPanel seguidoresPanel;
    private javax.swing.JTable seguidoresTable;
    private javax.swing.JPanel temasPanel;
    private javax.swing.JTable temasTable;
    private javax.swing.JComboBox<String> usuariosComboBox;
    private javax.swing.JPanel usuariosPanel;
    private javax.swing.JPanel usuariosSeguidosPanel;
    private javax.swing.JTable usuariosSeguidosTable;
    // End of variables declaration//GEN-END:variables
}
