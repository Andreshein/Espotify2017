/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import java.awt.Dimension;
import Logica.*;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class EliminarFavorito extends javax.swing.JInternalFrame {

    /**
     * Creates new form EliminarFavorito
     */
    private ArrayList<DtLista> favlistas;
    private ArrayList<DtTema> favtemas;
    private ArrayList<DtAlbum> favalbum;
    private IcontArtista Art;
    private IcontCliente Cli;
    private DefaultTableModel modelo;
    private DefaultTableModel modelodinamico;
    public EliminarFavorito() {
        initComponents();
        Art = Fabrica.getArtista();
        Cli = Fabrica.getCliente();
        modelo = (DefaultTableModel) tablacli.getModel();
        this.setTitle("Eliminar Favorito");
        nick2.setText("Seleccionar en tabla...");
        this.nick2.setEditable(false);
        this.favorito1.setEditable(false);
        tabla1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tablacli.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    public void centrar(){
        //este metodo devuelve el tamaÃ±o de la pantalla
        Dimension pantalla = this.getParent().getSize();
        //obtenemos el tamaÃ±o de la ventana
        Dimension ventana = this.getSize();
        //para centrar la ventana lo hacemos con el siguiente calculo
        int a = pantalla.width;
        int b = ventana.width;
        a = (a-b)/2;
        int c = pantalla.height;
        int d = ventana.height;
        c = (c-d)/2;
        this.setLocation(a, c);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        favtipo = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaalbum = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        favorito = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        nick = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablacli = new javax.swing.JTable();
        nick2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        favorito1 = new javax.swing.JTextField();
        tipo = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabla1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        jLabel3.setText("2. Elegir tipo");

        favtipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tema", "Album", "Lista Particular Pública", "Lista Por Defecto" }));
        favtipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                favtipoActionPerformed(evt);
            }
        });

        tablaalbum.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Nick Artista", "Año"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tablaalbum.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaalbumMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaalbum);

        jLabel4.setText("Favorito Seleccionado:");

        setClosable(true);
        setIconifiable(true);

        jLabel1.setText("1. Buscar cliente por Nickname:");

        nick.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nickKeyReleased(evt);
            }
        });

        tablacli.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nickname", "Nombre", "Apellido"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tablacli.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablacliMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablacli);

        jLabel2.setText("Cliente Seleccionado:");

        jLabel5.setText("2. Elegir tipo");

        jLabel6.setText("Favorito Seleccionado:");

        tipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tema", "Album", "Lista" }));
        tipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoActionPerformed(evt);
            }
        });

        tabla1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tabla1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabla1);

        jButton1.setText("Eliminar Selección");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nick2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addComponent(nick))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(tipo, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(favorito1)))))
                .addGap(50, 50, 50))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(nick, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nick2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(favorito1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nickKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nickKeyReleased
        nick2.setText("Seleccionar en tabla...");
        if (Cli.ClientesVacio())
        javax.swing.JOptionPane.showMessageDialog(null,"No hay clientes ingresados", "Aviso", 2);
        else{
            List<DtCliente> clientes = Cli.BuscarClientesFav(nick.getText());
            modelo.setRowCount(0);
            for (int i=0;i<clientes.size();i++){
                DtCliente dt = (DtCliente)clientes.get(i);
                Object[] dat={dt.getNickname(), dt.getNombre(), dt.getApellido()};
                modelo.addRow(dat);
            }
        }
    }//GEN-LAST:event_nickKeyReleased

    private void tablacliMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablacliMouseClicked
        String x = (String) modelo.getValueAt(tablacli.getSelectedRow(), 0);
        nick2.setText(x);
        LlenarTabla();
    }//GEN-LAST:event_tablacliMouseClicked

    private void favtipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_favtipoActionPerformed
        
    }//GEN-LAST:event_favtipoActionPerformed

    private void tablaalbumMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaalbumMouseClicked

    }//GEN-LAST:event_tablaalbumMouseClicked

    private void tipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoActionPerformed
        if (nick2.getText().equals("Seleccionar en tabla..."))
            javax.swing.JOptionPane.showMessageDialog(null, "No hay un cliente seleccionado"," Error ",0);
        else{
            LlenarTabla();
            }
    }//GEN-LAST:event_tipoActionPerformed

    private void LlenarTabla(){
        favorito1.setText("Seleccionar en tabla...");
        DtCliente dtc = Cli.verPerfilCliente(nick2.getText());
            if (this.tipo.getSelectedIndex() == 1){
                tabla1.setModel(new javax.swing.table.DefaultTableModel(
                    new Object [][] { },
                    new String [] {"Nombre", "Nick Artista", "Año"}) {Class[] types = new Class []
                    {java.lang.String.class, java.lang.String.class, java.lang.Integer.class};

                    public Class getColumnClass(int columnIndex) {
                        return types [columnIndex];
                    }});
                    modelodinamico = (DefaultTableModel) tabla1.getModel();
                    this.favalbum = dtc.getFavAlbumes();
                    modelodinamico.setRowCount(0);
                    for (int i=0;i<favalbum.size();i++){
                        DtAlbum dt = (DtAlbum)favalbum.get(i);
                        Object[] dat={dt.getNombre(), dt.getNombreArtista(), dt.getAnio()};
                        modelodinamico.addRow(dat);
                    }
                }
                if (this.tipo.getSelectedIndex() == 0){
                    tabla1.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] { },
                        new String [] {"Nombre", "Nombre Album", "Nick Artista"}) {Class[] types = new Class []
                        {java.lang.String.class, java.lang.String.class, java.lang.String.class};

                        public Class getColumnClass(int columnIndex) {
                            return types [columnIndex];
                        }});
                        modelodinamico = (DefaultTableModel) tabla1.getModel();
                        modelodinamico.setRowCount(0);
                        this.favtemas = dtc.getFavTemas();
                        for (int i=0;i<favtemas.size();i++){
                                DtTema dt = favtemas.get(i);
                                Object[] dat={dt.getNombre(),dt.getNomalbum(),dt.getNomartista()};
                                modelodinamico.addRow(dat);
                            }
                    }
                    if (this.tipo.getSelectedIndex() == 2){
                        tabla1.setModel(new javax.swing.table.DefaultTableModel(
                            new Object [][] { },
                            new String [] {"Nombre Lista", "Tipo", "Género/Propietario"}) {Class[] types = new Class []
                            {java.lang.String.class, java.lang.String.class, java.lang.String.class};

                            public Class getColumnClass(int columnIndex) {
                                return types [columnIndex];
                            }});
                            modelodinamico = (DefaultTableModel) tabla1.getModel();
                            modelodinamico.setRowCount(0);
                            this.favlistas=dtc.getFavListas();
                            for (int i=0;i<favlistas.size();i++){
                                DtLista dtp = this.favlistas.get(i);
                                if(dtp instanceof DtListaP){
                                Object[] dat={dtp.getNombre(),"Particular",((DtListaP)dtp).getUsuario()};
                                modelodinamico.addRow(dat);}
                                else{
                                Object[] dat={dtp.getNombre(),"Por Defecto",((DtListaPD)dtp).getGenero()};
                                modelodinamico.addRow(dat);
                            }}
                        }
    }
    private void tabla1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla1MouseClicked
        String x = (String) modelodinamico.getValueAt(tabla1.getSelectedRow(), 0);
        favorito1.setText(x);     
        
    }//GEN-LAST:event_tabla1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try{
            eliminarfavorito();
        }
        catch (Exception e){
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(),"Error", 0);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void eliminarfavorito() throws Exception{
        if (favorito1.getText().equals("Seleccionar en tabla...")){
            throw new Exception("No se ha seleccionado un elemento favorito");
        }
        else
            if (nick2.getText().equals("Seleccionar en tabla...")){
                throw new Exception("No se ha seleccionado un cliente");
            }
            else{
                String[] elemento = {"","",""};
                elemento[0] = favorito1.getText();
                String cliente = nick2.getText();
                int tipo;
                if (this.tipo.getSelectedIndex() == 0){
                    tipo=0;
                    elemento[1] = (String) modelodinamico.getValueAt(tabla1.getSelectedRow(), 1);
                    elemento[2] = (String) modelodinamico.getValueAt(tabla1.getSelectedRow(), 2);
                    Cli.EliminarFavorito(cliente, elemento, tipo);
                }
                if (this.tipo.getSelectedIndex() == 1){
                    tipo=1;
                    elemento[1] = (String) modelodinamico.getValueAt(tabla1.getSelectedRow(), 1);
                    Cli.EliminarFavorito(cliente, elemento, tipo);
                }
                if (this.tipo.getSelectedIndex() == 2){
                    tipo=2;
                    elemento[1] = (String) modelodinamico.getValueAt(tabla1.getSelectedRow(), 1);
                    elemento[2] = (String) modelodinamico.getValueAt(tabla1.getSelectedRow(), 2);
                    Cli.EliminarFavorito(cliente, elemento, tipo);
                }
                javax.swing.JOptionPane.showMessageDialog(null, "Operación Completada","Favorito Eliminado", 1);
                this.modelo.setRowCount(0);
                this.modelodinamico.setRowCount(0);
                nick2.setText("Seleccionar en tabla...");
                favorito1.setText("Seleccionar en tabla...");
            }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField favorito;
    private javax.swing.JTextField favorito1;
    private javax.swing.JComboBox<String> favtipo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField nick;
    private javax.swing.JTextField nick2;
    private javax.swing.JTable tabla1;
    private javax.swing.JTable tablaalbum;
    private javax.swing.JTable tablacli;
    private javax.swing.JComboBox<String> tipo;
    // End of variables declaration//GEN-END:variables
}
