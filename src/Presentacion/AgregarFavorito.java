/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import Logica.DtCliente;
import Logica.Fabrica;
import Logica.DtAlbum;
import Logica.*;
import Logica.IcontArtista;
import Logica.IcontCliente;
import java.awt.Dimension;
import java.util.List;
import javax.swing.table.*;
import java.lang.Exception;
import javax.swing.ListSelectionModel;
/**
 *
 * @author Admin
 */
public class AgregarFavorito extends javax.swing.JInternalFrame {

    private IcontArtista Art;
    private IcontCliente Cli;
    private DefaultTableModel modelo;
    private DefaultTableModel modelodinamico;
    //private DefaultTableModel modelotema;
    //private DefaultTableModel modelolista;
    /**
     * Creates new form AgregarFavorito
     */
    public AgregarFavorito() {
        initComponents();
        nick2.setEditable(false);
        favorito.setEditable(false);
        favorito.setText("Seleccionar en tabla...");
        nick2.setText("Seleccionar en tabla...");
        Art = Fabrica.getArtista();
        Cli = Fabrica.getCliente();
        modelo = (DefaultTableModel) tablacli.getModel();
        modelodinamico = (DefaultTableModel) tablaalbum.getModel();
        this.setTitle("Agregar Favorito a Cliente");
        tablaalbum.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tablacli.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);       
    }

    public void centrar(){
        //este metodo devuelve el tamaÃ±o de la pantalla
        Dimension pantalla = this.getParent().getSize();
        //obtenemos el tamaÃ±o de la ventana
        Dimension ventana = this.getSize();
        //para centrar la ventana lo hacemos con el siguiente calculo
        int a = pantalla.width;
        int b = ventana.width;
        a = (a-b)/2;
        int c = pantalla.height;
        int d = ventana.height;
        c = (c-d)/2;
        this.setLocation(a, c);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablacli = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        nick = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        nick2 = new javax.swing.JTextField();
        favtipo = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaalbum = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        favorito = new javax.swing.JTextField();
        aceptar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);

        tablacli.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nickname", "Nombre", "Apellido"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tablacli.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablacliMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablacli);

        jLabel1.setText("1. Buscar cliente por Nickname:");

        nick.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nickKeyReleased(evt);
            }
        });

        jLabel2.setText("Cliente Seleccionado:");

        favtipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tema", "Album", "Lista Particular Pública", "Lista Por Defecto" }));
        favtipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                favtipoActionPerformed(evt);
            }
        });

        jLabel3.setText("2. Elegir tipo");

        tablaalbum.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Nick Artista", "Año"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tablaalbum.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaalbumMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaalbum);

        jLabel4.setText("Favorito Seleccionado:");

        aceptar.setText("Aceptar");
        aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(nick))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nick2)))
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(aceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(favtipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(favorito, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nick, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(favtipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nick2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(favorito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(aceptar)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nickKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nickKeyReleased
        nick2.setText("Seleccionar en tabla...");
        if (Cli.GetClientes()==null)
            javax.swing.JOptionPane.showMessageDialog(null,"No hay clientes ingresados", "Aviso", 2);
        else{
            List<DtCliente> clientes = Cli.BuscarClientesFav(nick.getText());
            modelo.setRowCount(0);
            for (int i=0;i<clientes.size();i++){
                DtCliente dt = (DtCliente)clientes.get(i);
                Object[] dat={dt.getNickname(), dt.getNombre(), dt.getApellido()};
                modelo.addRow(dat);
                }
        }
    }//GEN-LAST:event_nickKeyReleased

    private void tablacliMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablacliMouseClicked
        String x = (String) modelo.getValueAt(tablacli.getSelectedRow(), 0);
        nick2.setText(x);
    }//GEN-LAST:event_tablacliMouseClicked

    private void favtipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_favtipoActionPerformed
        favorito.setText("Seleccionar en tabla...");
        if (this.favtipo.getSelectedIndex() == 1){
            tablaalbum.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] { },
            new String [] {"Nombre", "Nick Artista", "Año"}) {Class[] types = new Class [] 
            {java.lang.String.class, java.lang.String.class, java.lang.Integer.class};

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }});
            modelodinamico = (DefaultTableModel) tablaalbum.getModel();
            List<DtAlbum> albumes = Art.listarTodosAlbumes();
            modelodinamico.setRowCount(0);
            for (int i=0;i<albumes.size();i++){
                DtAlbum dt = (DtAlbum)albumes.get(i);
                Object[] dat={dt.getNombre(), dt.getNombreArtista(), dt.getAnio()};
                modelodinamico.addRow(dat);
                }
        }
        if (this.favtipo.getSelectedIndex() == 0){
            tablaalbum.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] { },
            new String [] {"Nombre", "Nombre Album", "Nick Artista"}) {Class[] types = new Class [] 
            {java.lang.String.class, java.lang.String.class, java.lang.String.class};

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }});
            modelodinamico = (DefaultTableModel) tablaalbum.getModel();
            modelodinamico.setRowCount(0);
            List<DtAlbum> albumes = Art.listarTodosAlbumes();
            for (int i=0;i<albumes.size();i++){
                DtAlbum dt = (DtAlbum)albumes.get(i);
                List<DtTema> listatemas = dt.getTemas();
                for (int j=0;j<listatemas.size();j++){
                    DtTema t = listatemas.get(j);
                    Object[] dat={t.getNombre(),dt.getNombre(),dt.getNombreArtista()};
                    modelodinamico.addRow(dat);
                }           
            }
        }
        if (this.favtipo.getSelectedIndex() == 2){
            tablaalbum.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] { },
            new String [] {"Nombre Lista", "Nick Propietario"}) {Class[] types = new Class [] 
            {java.lang.String.class, java.lang.String.class};

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }});
            modelodinamico = (DefaultTableModel) tablaalbum.getModel();
            modelodinamico.setRowCount(0);
            List<DtListaP> listasp = Cli.listarTodasListasP();
            for (int i=0;i<listasp.size();i++){
                DtListaP dtp = (DtListaP)listasp.get(i);
                Object[] dat={dtp.getNombre(),dtp.getUsuario()};
                modelodinamico.addRow(dat);
            }
        }
        if (this.favtipo.getSelectedIndex() == 3){
            tablaalbum.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] { },
            new String [] {"Nombre Lista", "Género"}) {Class[] types = new Class [] 
            {java.lang.String.class, java.lang.String.class};

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }});
            modelodinamico = (DefaultTableModel) tablaalbum.getModel();
            modelodinamico.setRowCount(0);
            List<DtListaPD> listaspd = Art.ListarListaPD();
            for (int i=0;i<listaspd.size();i++){
                DtListaPD dtpd = (DtListaPD)listaspd.get(i);
                Object[] dat={dtpd.getNombre(),dtpd.getGenero()};
                modelodinamico.addRow(dat);
            }
        }   
    }//GEN-LAST:event_favtipoActionPerformed

    private void tablaalbumMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaalbumMouseClicked
        String x = (String) modelodinamico.getValueAt(tablaalbum.getSelectedRow(), 0);
        favorito.setText(x);
    }//GEN-LAST:event_tablaalbumMouseClicked

    private void aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarActionPerformed
        try{
            confirmarfavorito();
        }
        catch (Exception e){
            javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(),"Error", 0);
        }
    }//GEN-LAST:event_aceptarActionPerformed

    private void confirmarfavorito() throws java.lang.Exception{
        if (favorito.getText().equals("Seleccionar en tabla...")){
            throw new Exception("No se ha seleccionado un elemento favorito");
        }
        else
            if (nick2.getText().equals("Seleccionar en tabla...")){
                throw new Exception("No se ha seleccionado un cliente");
            }
            else{
                boolean tru = false;
                String cliente = nick2.getText();
                String[] elementos = {"","",""};
                String x = favorito.getText();
                elementos[0] = x; 
                if (this.favtipo.getSelectedIndex() == 0){
                    elementos[1] = (String) modelodinamico.getValueAt(tablaalbum.getSelectedRow(), 1); //nombre album
                    elementos[2] = (String) modelodinamico.getValueAt(tablaalbum.getSelectedRow(), 2); //nick artista
                    tru= Cli.InsertarFavorito(cliente, elementos, 0);
                }
                if (this.favtipo.getSelectedIndex() == 1){
                    elementos[1] = (String) modelodinamico.getValueAt(tablaalbum.getSelectedRow(), 1); //nick artista
                    tru = Cli.InsertarFavorito(cliente, elementos, 1);                
                }
                if (this.favtipo.getSelectedIndex() == 2){
                    elementos[1] = (String) modelodinamico.getValueAt(tablaalbum.getSelectedRow(), 1); //nick propietario
                    tru = Cli.InsertarFavorito(cliente, elementos, 2);
                    }
                if (this.favtipo.getSelectedIndex() == 3)
                    tru = Cli.InsertarFavorito(cliente, elementos, 3);
                if (tru==true)
                    javax.swing.JOptionPane.showMessageDialog(null, "Favorito Ingresado Correctamente","Éxito", 1);
                if (tru==false)
                    javax.swing.JOptionPane.showMessageDialog(null, "Favorito ya presente en la colección del cliente","Error", 0);
            }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aceptar;
    private javax.swing.JTextField favorito;
    private javax.swing.JComboBox<String> favtipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nick;
    private javax.swing.JTextField nick2;
    private javax.swing.JTable tablaalbum;
    private javax.swing.JTable tablacli;
    // End of variables declaration//GEN-END:variables
}
